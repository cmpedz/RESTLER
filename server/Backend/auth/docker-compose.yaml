services:
  postgres:
    image: 'postgres:latest'
    container_name: 'postgres'
    environment:
      - 'POSTGRES_DB=authdb'
      - 'POSTGRES_PASSWORD=123456'
      - 'POSTGRES_USER=postgres'
    ports:
      - '5432:5432'
    networks:
      - auth-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./initdb/init.sql:/docker-entrypoint-initdb.d/postgres-init.sql
    restart: always

  redis:
    image: 'redis:latest'
    container_name: 'redis'
    volumes:
      - redis-data:/data
    ports:
      - '6379:6379'
    networks:
      - auth-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - auth-network
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      
  kafka:
    image: 'confluentinc/cp-kafka:7.4.4'
    container_name: 'kafka'
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - auth-network
    volumes:
      - kafka-data:/var/lib/kafka/data
  # auth-backend:
  #   build: 
  #     context: .
  #   ports:
  #     - "8082:8082"
  #   networks:
  #     - auth-network

networks:
  auth-network:
    external: true

volumes:
  postgres-data:
  redis-data:
  kafka-data:
  zookeeper-data:
